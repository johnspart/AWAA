/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'john.lopez' at '23/11/15 02:57 PM' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'jacoco'
apply plugin: 'maven'

group = 'org.awaa.web'

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse{
 	wtp{
  		facet{
  			facet name: 'jst.web', version: '3.1'
  		}
 	}
}

// In this section you declare where to find the dependencies of your project
repositories {
   	mavenCentral()
	jcenter()
}

compileJava {options.encoding = "UTF-8"}
compileTestJava {options.encoding = "UTF-8"}

// In this section you declare the dependencies for your production and test code
dependencies {
	compile project(path:':awaa-services', configuration:'archives')
	compile project(path:':awaa-repository', configuration:'archives')
	compile project(path:':awaa-utils', configuration:'archives')
	
	testCompile project(path:':awaa-services', configuration:'archives')
	testCompile project(path:':awaa-repository', configuration:'archives')
	testCompile project(path:':awaa-utils', configuration:'archives')
	
	compile 'org.springframework:spring-webmvc:4.2.3.RELEASE'
	
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'javax.transaction:jta:1.1'
    testCompile 'net.therore.spring.mockito:therore-spring-mockito:1.3.0'
    compile(group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.49.0')
	compile(group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '2.49.0')
    compile(group: 'info.cukes', name: 'cucumber-java', version: '1.2.4')
	compile(group: 'info.cukes', name: 'cucumber-junit', version: '1.2.4')
	compile 'org.seleniumhq.selenium:selenium-firefox-driver:2.49.0'
	
    
    //Librerias De otros proyectos
    compile 'org.hibernate:hibernate-core:5.0.5.Final'
	compile 'org.springframework:spring-context:4.2.3.RELEASE'
	compile 'org.springframework.security:spring-security-web:4.0.3.RELEASE'
	compile 'org.springframework.security:spring-security-core:4.0.3.RELEASE'
	compile 'org.springframework.security:spring-security-config:4.0.3.RELEASE'
	compile 'org.springframework:spring-tx:4.2.3.RELEASE'
	compile 'org.springframework:spring-orm:4.2.3.RELEASE'
	providedCompile 'org.jboss.spec.javax.servlet:jboss-servlet-api_3.1_spec:1.0.0.Final'
}

test {
    systemProperty "webdriver.firefox.driver", firefoxDriver
}
//Artifactory Config
buildscript {
    repositories {
    	jcenter()
        maven {
            url 'http://localhost:8091/artifactory/DevOps-virtual'
            credentials {
                username = "admin"
                password = "password"
            }
        }
        
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

configurations {
  published
}

artifactory {
    contextUrl = "http://localhost:8091/artifactory"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'DevOps_Repository'
            username = "admin"
            password = "password"
            maven = true
            
            ivy {
		        ivyLayout = '[organization]/[module]/ivy-[revision].xml'
		        artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
		        mavenCompatible = true //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
			}
            
        }
    }
    resolve {
        repository {
            repoKey = 'DevOps-virtual'
            username = "admin"
            password = "password"
            maven = true
            
        }
    }
}

